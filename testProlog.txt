def_class(person, [], [field(name, "matteo"), field(surname, "ducie"), method(talk_p, [], (write("sono la persona")))]),
def_class(group, [], [field(prs, "", person), method(talk_g, [], (write("sono il gruppo")))]),
def_class(big, [], [field(grp, "", group), method(talk, [], (write("sono il gruppone")))]).
make(p1, person, [name = "smalulu"]),
make(g1, group, [prs = p1]),
make(b1, big, [grp = g1]).
make(p2, person, [name = 12]).

field(p1, name, R).
fieldx(b1, [grp, prs, name], R).
fieldx(b1, [grp, prs], R).
talk_p(p1).
talk_g(g1).
talk(b1).

def_class(prova, [person], [field(attr, "prova", string), method(proviamo, [], (write("sono la prova")))]).
make(prv, prova, [name = "smelele", attr = "cambio"]).
inst(prv, I).



%% field/3 recupera il valore di un campo 
field(VAR, FIELD_NAME, RESULT):-
    var(RESULT),
    var(VAR),
    !,
    atom(FIELD_NAME),
    VAR = instance(INSTANCE_NAME, _, FIELDS),
    %%member(FIELD_NAME = RESULT, FIELDS).
    instance(INSTANCE_NAME, _, FIELDS),
    member(FIELD_NAME = RESULT, FIELDS).


field(INSTANCE_NAME, FIELD_NAME, RESULT):-
    atom(INSTANCE_NAME),
    !,
    is_instance(INSTANCE_NAME),
    var(RESULT),
    instance(INSTANCE_NAME, _, FIELDS),
    member(FIELD_NAME = RESULT, FIELDS).

field(VAR, FIELD_NAME, RESULT):-
    nonvar(VAR),
    VAR = instance(_, _, FIELDS),
    !,
    atom(FIELD_NAME),
    member(FIELD_NAME = RESULT, FIELDS).
